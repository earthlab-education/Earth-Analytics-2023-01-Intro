name: Assign Issues to all Students

on:
  issue_comment

jobs:
  get-members:
    if: startsWith(github.event.comment.body, '/assign')
    name: Get a list of group members tagged in an issue
    runs-on: ubuntu-latest
    steps:
      - name: Read team slug
        run: >-
          echo "${{ github.event.comment.body }}" |
          sed 's/\/assign @${{ github.repository_owner }}\/\(.*\)$/\1/' |
          awk '{print "TEAM_SLUG="$1}' 
          >> $GITHUB_ENV
          
      - name: Request team info
        id: get-members
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{ secrets.EA_BOT_F23_PAT }}
          script: |
            return github.rest.teams.listMembersInOrg({
              org: context.repo.owner,
              team_slug: "${{env.TEAM_SLUG}}"
            })
        
      - name: Extract member list
        id: members
        run: >-
          echo ${{ join(fromJson(steps.get-members.outputs.result).data.*.login, ', ') }} |
          awk '{print "MEMBERS=["$1"]"}' 
          >> $GITHUB_ENV
      - name: Print members
        run: echo $MEMBERS

    outputs:
      members: ${{ env.MEMBERS }}
            
  assign_issues:
    needs: get-members
    runs-on: ubuntu-latest
    strategy:
      matrix:
        assignee: ${{ needs.get-members.outputs.members }}

    steps:
      - name: Create duplicate issue for each member
        uses: imjohnbo/issue-bot@v3.4.3
        with:
          title: ${{ matrix.assignee }} ${{ github.event.issue.title }}
          body: ${{ github.event.issue.body }} 
          labels: |- 
            {{#each github.event.issue.labels}}@{{this}}{{#unless @last}}, {{/unless}}{{/each}}
          assignees: ${{ matrix.assignee }}
          milestone: ${{ github.event.issue.milestone.title }}
