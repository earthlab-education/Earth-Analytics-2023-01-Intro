on:
  issue_comment

jobs:
  get-members:
    if: startsWith(github.event.comment.body, '/assign')
    name: Assign duplicate issue to each member of a group
    runs-on: ubuntu-latest
    steps:
      - name: Read team slug
        run: >-
          echo "${{ github.event.comment.body }}" |
          sed 's/\/assign @\(.*\)$/\1/' |
          awk '{print "TEAM_SLUG="$1}' 
          >> $GITHUB_ENV
      - name: Print team slug
        run: echo $TEAM_SLUG
        
      - name: Request team info
        id: get-members
        run: >-
          echo "RESP=$(gh api --paginate -X GET /orgs/earthlab-education/teams/$TEAM_SLUG/members\?role=member | jq 'reduce inputs as $i (.; . += $i)')" 
          >> $GITHUB_OUTPUT
      - name: Extract member list
        id: members
        run: >-
          echo ${{ join(fromJson(steps.get-members.outputs.RESP).*.login, ', ') }} |
            awk '{print "MEMBERS=["$1"]"}'
            >> $GITHUB_OUTPUT
      - name: Print team members
        run: echo ${{ steps.assignees.outputs.MEMBERS }}
    outputs:
      members: ${{ steps.assignees.outputs.MEMBERS }}
            
  assign_issues:
    needs: get_members
    runs-on: ubuntu-latest
    strategy:
      matrix:
        assignee: ${{ needs.get_members.outputs.MEMBERS }}

    steps:
      - name: Create duplicate issue for each member
        uses: imjohnbo/issue-bot@v3.4.3
        with:
          title: ${{ matrix.assignee }} ${{ github.event.issue.title }}
          body: ${{ github.event.issue.body }} 
          labels: |- 
            {{#each github.event.issue.labels}}@{{this}}{{#unless @last}}, {{/unless}}{{/each}}
          assignees: ${{ matrix.assignee }}
          milestone: ${{ github.event.issue.milestone.title }}
